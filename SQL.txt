/* Query 1- query used for first insight*/ I uesd Udacity question (Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out)
WITH join_table AS (
SELECT *
FROM film AS f
    JOIN film_category AS fc 
	ON fc.film_id = f.film_id
    JOIN category AS ca
	ON ca.category_id = fc.category_id
    JOIN inventory AS inv
	ON inv.film_id = f.film_id
    JOIN rental AS re
	ON re.inventory_id = inv.inventory_id
WHERE ca.name IN ('Animation','Children','Classics','Comedy','Family','Music')
)
SELECT title AS film_title, name AS category_name, COUNT(*) AS rental_count
FROM join_table
GROUP BY 1,2
ORDER BY 2,1;


/* Query 2- query used for second insight*/  What's the best 5 customers "With full name" that have the highest average amounts in payment and lives in Buenos Aires distinct
WITH Join_tables AS(
SELECT first_name,last_name,sum(pa.amount) AS summation
FROM customer AS cu
JOIN address AS ad
ON ad.address_id = cu.address_id
JOIN payment AS pa
ON cu.customer_id = pa.customer_id
WHERE ad.district = 'Buenos Aires'
GROUP BY 1,2
)
SELECT concat(first_name, ' ',last_name) AS full_name, AVG (summation) AS avg
FROM join_tables
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5

/* Query 3- query used for third insight*/ I uesed Udacity question (Now we need to know how the length of rental duration of these family-friendly movies compares to the duration that all movies are rented for. Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories? Make sure to also indicate the category that these family-friendly movies fall into.)
WITH Join_tables AS(
SELECT *
FROM film_category AS fc
JOIN film AS f
ON f.film_id = fc.film_id
JOIN category AS c
ON c.category_id = fc.category_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
)
SELECT title AS moview_title, name AS category_name, rental_duration, 
NTILE(4) OVER (ORDER BY rental_duration) AS Levels
FROM Join_tables
ORDER BY 3,4;



/* Query 4- query used for fourth insight*/  I used Udacity question (Write a query that returns the store ID for the store, the year and month and the number of rental orders each store has fulfilled for that month. Your table should include a column for each of the following: year, month, store ID and count of rental orders fulfilled during that month.)

SELECT DATE_PART('month',r.rental_date) AS Rental_month,
       DATE_PART('Year',r.rental_date) AS Rental_year
,st.store_id, COUNT(*) AS Count_rentals
FROM store AS s
JOIN staff AS st
ON s.store_id = st.store_id
JOIN rental r
ON st.staff_id = r.staff_id
GROUP BY 1,2,3
ORDER BY 4 DESC







